[project]
name = "thesis"
version = "0.1.0"
description = "Graph optimization using deep learning"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "James Elmore", email = "email@jameselmore.org"},
]
dependencies = [
    "gymnasium>=1.2.0",
    "hydra-core>=1.3.2",
    "networkx>=3.0",
    "numpy>=2.3.2",
    "omegaconf>=2.3.0",
    "stable-baselines3>=2.7.0",
    "torch>=2.8.0",
    "tqdm>=4.67.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.10",
    "pyright>=1.1.390",
]



[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.ruff]
line-length = 88
target-version = "py311"
src = [".", "algorithms", "models", "problems", "experiment_logger"]

[tool.ruff.lint]
# Enable comprehensive linting rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (remove commented code)
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

ignore = [
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison
    "ARG002",  # Unused method argument
    "PTH123",  # `open()` should be replaced by `Path.open()`
    "N806",    # Variable names should be lowercase
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"**/test_*.py" = ["ARG001", "ARG002"]  # Allow unused arguments in tests

[tool.ruff.lint.isort]
known-first-party = ["thesis", "algorithms", "models", "problems", "experiment_logger"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = [".", "algorithms", "models", "problems", "experiment_logger"]
exclude = ["**/__pycache__", "**/.venv", "**/venv"]
pythonVersion = "3.11"
typeCheckingMode = "basic"

# Use library code for better type analysis
useLibraryCodeForTypes = true

[dependency-groups]
dev = [
    "pyright>=1.1.404",
    "ruff>=0.12.10",
]
